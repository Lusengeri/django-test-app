version: '3'

services:
  db:
    container_name: pg_db
    image: postgres:14.4
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 60s
      timeout: 10s
      retries: 50 
      start_period: 100s
    volumes:
      - pg_db_data:/var/lib/postgres/data

  pgadmin:
    container_name: pg_db_admin
    depends_on:
      - db
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=5050
    image: dpage/pgadmin4:6.12
    ports:
      - 5050:5050
    
  backend:
    build:
      context: ../../backend
      dockerfile: dev.Dockerfile
    container_name: backend
    command: >
      sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    environment:
      - DBUSER=${DBUSER}
      - DBPASSWORD=${DBPASSWORD}
      - DBHOST=${DBHOST}
      - DBPORT=5432
      - DBNAME=${DBNAME}
    ports:
      - 8000:8000
    restart: always
    volumes:
      - ../../backend:/usr/src/django-test-app/backend
    
  frontend:
    build:
      context: ../../frontend
      dockerfile: dev.Dockerfile
    command: >
      sh -c "yarn start"
    container_name: frontend
    depends_on: 
      - backend
    ports:
      - 3000:3000
    volumes:
      - ../../frontend:/usr/src/django-test-app/frontend

volumes:
  pg_db_data:
    external: true
